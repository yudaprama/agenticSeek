name: Test Router API

on:
  pull_request:
    branches:
      - router
    paths:
      - 'router-api/**'
      - 'sources/**'
      - 'llm_router/**'
      - 'prompts/**'
  workflow_dispatch: # Allow manual trigger

jobs:
  test-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (test only)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./router-api/Dockerfile
          push: false
          tags: router-api:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run container for testing
        run: |
          docker run -d --name router-api-test -p 8080:8080 router-api:test
          sleep 10

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install test dependencies
        run: |
          pip install requests

      - name: Run API tests
        run: |
          cd router-api
          python test_api.py

      - name: Get container logs
        if: always()
        run: |
          echo "=== Container Logs ==="
          docker logs router-api-test

      - name: Clean up
        if: always()
        run: |
          docker stop router-api-test || true
          docker rm router-api-test || true

  lint-and-security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install flake8 black isort bandit safety
          cd router-api
          pip install -r requirements.txt

      - name: Run Black formatter check
        run: |
          black --check router-api/

      - name: Run isort import check
        run: |
          isort --check-only router-api/

      - name: Run flake8 linter
        run: |
          flake8 router-api/ --max-line-length=88 --extend-ignore=E203,W503

      - name: Run Bandit security check
        run: |
          bandit -r router-api/ -f json -o bandit-report.json || true

      - name: Check dependencies for security vulnerabilities
        run: |
          safety check -r router-api/requirements.txt || true

      - name: Upload security scan results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json 